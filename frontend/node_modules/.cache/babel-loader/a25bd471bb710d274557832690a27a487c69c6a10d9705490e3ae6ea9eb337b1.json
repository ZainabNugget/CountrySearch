{"ast":null,"code":"var _jsxFileName = \"/Users/zainab/Documents/GitHub/CountrySearch/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let searchBar = document.getElementById(\"searchBar\");\n  const [userString, setUserString] = useState(''); //set the string from the user into variable\n  const handleChange = event => {\n    //When the user inputs a string i will add it to the userString const\n    setUserString(event.target.value);\n  };\n  //put endpoint into variable\n  //add into the api url \n  const api_url = `/api/` + userString;\n\n  //Getting the data from the api and set into a const\n  const [countryData, setCountryData] = useState(null);\n  //Call this method to get API data\n  const fetchData = async () => {\n    searchBar.style.display = \"none\";\n    try {\n      //try fetching api response\n      const response = await fetch(api_url);\n      if (!response.ok) {\n        //if its not fetching respond with error\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json(); //put all data into this variable\n      setCountryData(data); //set it into this data variable\n    } catch (error) {\n      console.error('Error:', error); //print out any occuring errors :)\n    }\n  };\n\n  function cleanse(data) {\n    return data.replaceAll('{', ' ').replaceAll('}', ' ').replaceAll('\"', ' ');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"searchBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"greetings\",\n        className: \"flex-row\",\n        children: \"Greetings! Search your country!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"earth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search\",\n        type: \"text\",\n        value: userString,\n        onChange: handleChange,\n        className: \"z99\",\n        placeholder: \"Type Your Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn\",\n        onClick: fetchData,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loadingScreen\",\n        className: \"hide\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex-col\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), Array.isArray(countryData) && countryData.length > 0 ? countryData.map((data, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n      id: \"info-page\",\n      className: \"flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"info-header\",\n        className: \"flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: data.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"flag of country\",\n          src: data.flags[\"png\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"general-info\",\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"text\",\n          children: [\"~ Other ways of naming this country are \", data.altSpellings + \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), \"~ The capital of \", data.name.common, \" is \", data.capital, \" with a population of: \", data.population, \" people...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), \"~ It is located in \", data.region, \", In the subregion \", data.subregion, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), \"~ \", data.flags[\"alt\"], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), \"~ The week starts on a \", data.startOfWeek, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), \"~ The currencies of this country: \", cleanse(JSON.stringify(data.currencies)), \",\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), \"~ Languages that this country speak, \", cleanse(JSON.stringify(data.languages)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), \"~\", data.independent ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This country is independent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This country is not independent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), \"For more information on this country, follow the \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: 'https://en.wikipedia.org/wiki/' + data.name.common,\n            children: \"wikipedia page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 67\n          }, this), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"img\",\n          src: data.coatOfArms[\"png\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-row\",\n      children: \"Try searching for a country!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UL1z2q8nD+GLAg7E4OUPfYfcEcc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","searchBar","document","getElementById","userString","setUserString","handleChange","event","target","value","api_url","countryData","setCountryData","fetchData","style","display","response","fetch","ok","Error","data","json","error","console","cleanse","replaceAll","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","Array","isArray","length","map","index","name","common","alt","src","flags","altSpellings","capital","population","region","subregion","startOfWeek","JSON","stringify","currencies","languages","independent","href","coatOfArms","_c","$RefreshReg$"],"sources":["/Users/zainab/Documents/GitHub/CountrySearch/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  let searchBar = document.getElementById(\"searchBar\");\n  const [userString, setUserString] = useState(''); //set the string from the user into variable\n  const handleChange = (event) => { //When the user inputs a string i will add it to the userString const\n    setUserString(event.target.value)\n  };\n  //put endpoint into variable\n  //add into the api url \n  const api_url = `/api/` + userString; \n\n  //Getting the data from the api and set into a const\n  const [countryData, setCountryData] = useState(null);\n  //Call this method to get API data\n  const fetchData = async () => {\n    searchBar.style.display = \"none\";\n    try { //try fetching api response\n      const response = await fetch(api_url);\n      if (!response.ok) { //if its not fetching respond with error\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json(); //put all data into this variable\n      setCountryData(data); //set it into this data variable\n    } catch (error) {\n      console.error('Error:', error); //print out any occuring errors :)\n    }\n  };\n\n  function cleanse(data) {\n    return data.replaceAll('{',' ').replaceAll('}',' ').replaceAll('\"',' ');\n  }\n\n  return (\n    <div id='page'>\n      {/* Below this will be the search bar, where the user will input the country */}\n        <section id=\"searchBar\" >\n        <h3 id='greetings' className='flex-row'>Greetings! Search your country!</h3>\n        <div id='earth'></div>\n        <input\n          id='search'\n          type='text'\n          value={userString}\n          onChange={handleChange}\n          className='z99'\n          placeholder=\"Type Your Country\" />\n          {/* After this button is pressed, the country will be processed, then the information will be displayed */}\n        <button id='btn' onClick={fetchData}>Search</button>\n        <div id='loadingScreen' className='hide'>\n          <p className='flex-col'>Loading...</p>\n        </div>\n      </section>\n      {/* Below here, in the article section, info about the country will be placed */}\n      {/* <p>We found {countryData.length} result(s)</p> */}\n      {Array.isArray(countryData) && countryData.length > 0 ? (\n        (countryData.map((data, index) => (\n          <article id='info-page' className='flex-col' key={index} >\n          <section id='info-header' className='flex-col'>\n            <h1>{data.name.common}</h1>\n            <img alt='flag of country' src={data.flags[\"png\"]}/>\n          </section>\n          <section id='general-info' className=''>\n          <p id='text'>~ Other ways of naming this country are {data.altSpellings+ \" \"} \n          <br />~ The capital of {data.name.common} is {data.capital} with a population of: {data.population} people... \n          <br/>~ It is located in {data.region}, In the subregion {data.subregion} \n          <br/>~ {data.flags[\"alt\"]}\n          <br/>~ The week starts on a {data.startOfWeek} \n          <br />~ The currencies of this country: {cleanse(JSON.stringify(data.currencies))}, \n          <br/>~ Languages that this country speak, {cleanse(JSON.stringify(data.languages))}\n          <br/>~ \n            {data.independent ? (\n                <span>This country is independent</span>\n            ):(\n              <span>This country is not independent</span>\n            )}\n            <br/>For more information on this country, follow the <a href={'https://en.wikipedia.org/wiki/'+data.name.common} >wikipedia page</a>!\n            </p>\n            <img id='img' src={data.coatOfArms[\"png\"]}/>\n          </section>\n        </article>\n      )))\n      ):(\n        <p className='flex-row'>Try searching for a country!</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}