{"ast":null,"code":"var _jsxFileName = \"/Users/zainab/Documents/GitHub/CountrySearch/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userString, setUserString] = useState(''); //set the string from the user into variable\n  const handleChange = event => {\n    //When the user inputs a string i will add it to the userString const\n    setUserString(event.target.value);\n  };\n  //put endpoint into variable\n  //add into the api url \n  const api_url = `/api/` + userString;\n\n  //Getting the data from the api and set into a const\n  const [countryData, setCountryData] = useState(null);\n  //Call this method to get API data\n  const fetchData = async () => {\n    try {\n      //try fetching api response\n      const response = await fetch(api_url);\n      if (!response.ok) {\n        //if its not fetching respond with error\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json(); //put all data into this variable\n      setCountryData(data); //set it into this data variable\n      console.log(data);\n    } catch (error) {\n      console.error('Error:', error); //print out any occuring errors :)\n    }\n  };\n\n  function cleanse(data) {\n    data.replaceAll('{', ' ').replaceAll('}', ' ').replaceAll('\"', ' ');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"searchBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"greetings\",\n        children: \"Greetings! Search your country!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search\",\n        type: \"text\",\n        value: userString,\n        onChange: handleChange,\n        placeholder: \"Type Your Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btn\",\n      onClick: fetchData,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"We found \", countryData.length, \" result(s)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), Array.isArray(countryData) && countryData.length > 0 ? countryData.map((data, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n      id: \"info-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"info-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: data.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"flag of country\",\n          src: data.flags[\"png\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"general-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The capital of \", data.name.common, \" is \", data.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"with a population of: \", data.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"It is located in \", data.region]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"In the subregion \", data.subregion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Other ways of naming this country: \", data.altSpellings + \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.flags[\"alt\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The week starts on a \", data.startOfWeek]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The currencies of this country: \", JSON.stringify(data.currencies)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Languages that this country speak, \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), data.independent ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This country is independent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This country is not independent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Try searching for a country!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UL1z2q8nD+GLAg7E4OUPfYfcEcc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","userString","setUserString","handleChange","event","target","value","api_url","countryData","setCountryData","fetchData","response","fetch","ok","Error","data","json","console","log","error","cleanse","replaceAll","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","length","Array","isArray","map","index","name","common","alt","src","flags","capital","population","region","subregion","altSpellings","startOfWeek","JSON","stringify","currencies","independent","_c","$RefreshReg$"],"sources":["/Users/zainab/Documents/GitHub/CountrySearch/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [userString, setUserString] = useState(''); //set the string from the user into variable\n  const handleChange = (event) => { //When the user inputs a string i will add it to the userString const\n    setUserString(event.target.value)\n  };\n  //put endpoint into variable\n  //add into the api url \n  const api_url = `/api/` + userString; \n\n  //Getting the data from the api and set into a const\n  const [countryData, setCountryData] = useState(null);\n  //Call this method to get API data\n  const fetchData = async () => {\n    try { //try fetching api response\n      const response = await fetch(api_url);\n      if (!response.ok) { //if its not fetching respond with error\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json(); //put all data into this variable\n      setCountryData(data); //set it into this data variable\n      console.log(data)\n    } catch (error) {\n      console.error('Error:', error); //print out any occuring errors :)\n    }\n  };\n\n  function cleanse(data) {\n      data.replaceAll('{',' ').replaceAll('}',' ').replaceAll('\"',' ');\n  }\n\n  return (\n    <div id='page'>\n      {/* Below this will be the search bar, where the user will input the country */}\n      <section className=\"searchBar\">\n        <h3 id='greetings'>Greetings! Search your country!</h3>\n        <input\n          id='search'\n          type='text'\n          value={userString}\n          onChange={handleChange}\n          placeholder=\"Type Your Country\" />\n      </section>\n      {/* After this button is pressed, the country will be processed, then the information will be displayed */}\n      <button id='btn' onClick={fetchData}>Search</button>\n      {/* Below here, in the article section, info about the country will be placed */}\n      <p>We found {countryData.length} result(s)</p>\n      {Array.isArray(countryData) && countryData.length > 0 ? (\n        (countryData.map((data, index) => (\n          <article id='info-page'  key={index} >\n          <section id='info-header'>\n            <h1>{data.name.common}</h1>\n            <img alt='flag of country' src={data.flags[\"png\"]}/>\n          </section>\n          <section id='general-info'>\n            <p>The capital of {data.name.common} is {data.capital}</p>\n            <p>with a population of: {data.population}</p>\n            <p>It is located in {data.region}</p>\n            <p>In the subregion {data.subregion}</p>\n            <p>Other ways of naming this country: {data.altSpellings+ \" \"}</p>\n            <p>{data.flags[\"alt\"]}</p>\n            <p>The week starts on a {data.startOfWeek}</p>\n            <p>The currencies of this country: {JSON.stringify(data.currencies)}</p>\n            <p>Languages that this country speak, </p>\n            {data.independent ? (\n                <p>This country is independent</p>\n            ):(\n              <p>This country is not independent</p>\n            )}\n          </section>\n        </article>\n      )))\n      ):(\n        <p>Try searching for a country!</p>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}